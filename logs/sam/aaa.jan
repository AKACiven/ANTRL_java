{'packageName': 'var.var.sealed', 'className': 'T2', 'implements': ['I1'], 'extends': 'NSC1', 'imports': ['java.lang.annotation.ElementType', 'java.lang.annotation.Target', 'java.util.function.BiFunction', 'java.util.function.Consumer', 'java.util.function.Function'], 'fields': [{'fieldType': 'int', 'fieldDefinition': 'C'}, {'fieldType': 'int', 'fieldDefinition': 'C'}, {'fieldType': 'int', 'fieldDefinition': 'C'}], 'methods': [{'returnType': 'int', 'methodName': 'fn1', 'params': [{'paramType': 'int', 'paramName': 'n'}], 'callMethods': [], 'methodBody': '{finalintk=4;varr=switch(n){case1,2,3+3,k,C,SC1.C->3+SC1.C;case20->3+4+C-k;case21->{intff=222;yieldff;}case22->{yield33+3;}case99->{thrownewRuntimeException("");}default->0;};returnr;}', 'methodvars': [{'varType': 'final', 'varDefinition': 'int'}, {'varType': 'var', 'varDefinition': 'r'}, {'varType': 'int', 'varDefinition': 'ff'}, {'varType': 'yield', 'varDefinition': 'ff'}]}, {'returnType': 'String', 'methodName': 'fn2', 'params': [{'paramType': 'String', 'paramName': 's'}], 'callMethods': [], 'methodBody': '{returnswitch(s){case"a"->"";case"b","c"->"a";default->"o";};}', 'methodvars': []}, {'returnType': 'int', 'methodName': 'fn3', 'params': [{'paramType': 'final', 'paramName': 'int'}], 'callMethods': [], 'methodBody': '{returnswitch(var){case1->2;default->var;};}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn4', 'params': [], 'callMethods': ['72 8 fn1(switch(1){case1->0;case2->2;default->1;})'], 'methodBody': '{fn1(switch(1){case1->0;case2->2;default->1;});}', 'methodvars': []}, {'returnType': 'int', 'methodName': 'fn5', 'params': [], 'callMethods': [], 'methodBody': '{E1e=E1.ONE;returnswitch(e){caseONE->0;};}', 'methodvars': [{'varType': 'E1', 'varDefinition': 'e'}]}, {'returnType': 'void', 'methodName': 'fn6', 'params': [], 'callMethods': [], 'methodBody': '{switch(1){case1->{}}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn7', 'params': [], 'callMethods': [], 'methodBody': '{switch(1){case1->{}case2->{}}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn8', 'params': [], 'callMethods': [], 'methodBody': '{vari=1;switch(1){}varf=2;switch(2){case2->{f=3;}}}', 'methodvars': [{'varType': 'var', 'varDefinition': 'i'}, {'varType': 'var', 'varDefinition': 'f'}]}, {'returnType': 'void', 'methodName': 'fn9', 'params': [{'paramType': 'String', 'paramName': 's'}], 'callMethods': [], 'methodBody': '{switch(s){case""->{}default->{}}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn10', 'params': [], 'callMethods': [], 'methodBody': '{vari=switch(1){case1->switch(2){case2->0;default->2;};default->2;};}', 'methodvars': [{'varType': 'var', 'varDefinition': 'i'}]}, {'returnType': 'void', 'methodName': 'fn11', 'params': [], 'callMethods': [], 'methodBody': '{switch(1){case1->thrownewRuntimeException("");}}', 'methodvars': []}, {'returnType': 'int', 'methodName': 'fn12', 'params': [], 'callMethods': ['147 27 System.out.println()'], 'methodBody': '{varv=1;intn=switch(1){case1:varg=1;System.out.println();yieldv;default:yield3;};returnn;}', 'methodvars': [{'varType': 'var', 'varDefinition': 'v'}, {'varType': 'int', 'varDefinition': 'n'}, {'varType': 'var', 'varDefinition': 'g'}, {'varType': 'yield', 'varDefinition': 'v'}]}, {'returnType': 'void', 'methodName': 'fn13', 'params': [], 'callMethods': [], 'methodBody': '{intn;switch(1){case1->n=1;}}', 'methodvars': [{'varType': 'int', 'varDefinition': 'n'}]}, {'returnType': 'void', 'methodName': 'fn14', 'params': [], 'callMethods': [], 'methodBody': '{switch(1){default->{}}varn=1;varm=switch(n){case1->2;case2->2;default->1;};m=switch(n){case2:yield2;default:yield3;};}', 'methodvars': [{'varType': 'var', 'varDefinition': 'n'}, {'varType': 'var', 'varDefinition': 'm'}]}, {'returnType': 'void', 'methodName': 'fn1', 'params': [{'paramType': 'Number', 'paramName': 'n'}], 'callMethods': ['204 58 l.byteValue()', '205 65 b.intValue()'], 'methodBody': '{if(ninstanceofLongvar){varv=var;}elseif(ninstanceofIntegeropen){varv=open;}elseif(ninstanceofByte){}else{thrownewRuntimeException("");}if(!(ninstanceofLongl));if(ninstanceoffinal@Dummy@Dummy2Longl&&l.byteValue()==1||ninstanceof@Dummy@Dummy2finalByteb&&b.intValue()==1);if(ninstanceofLong);if(ninstanceofLongvar);if(ninstanceofLongl);if(ninstanceoffinalLongl);if(ninstanceof@DummyLongl);if(ninstanceof@Dummy@Dummy2Longl);if(ninstanceoffinal@DummyLongl);if(ninstanceoffinal@Dummy@Dummy2Longl);if(ninstanceof@DummyfinalLongl);if(ninstanceof@Dummy@Dummy2finalLongl);}', 'methodvars': [{'varType': 'var', 'varDefinition': 'v'}, {'varType': 'var', 'varDefinition': 'v'}]}, {'returnType': 'void', 'methodName': 'f', 'params': [{'paramType': 'int', 'paramName': 'i'}], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f1', 'params': [{'paramType': 'Object', 'paramName': 'obj'}], 'callMethods': ['230 25 f(0)', '231 29 f(1)', '232 28 f(2)', '233 23 f(-1)'], 'methodBody': '{switch(obj){casenull->f(0);caseStrings->f(1);caseint[]a->f(2);default->f(-1);}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f2', 'params': [{'paramType': 'Object', 'paramName': 'obj'}], 'callMethods': ['239 25 f(0)', '240 27 f(1)', '241 30 f(1)', '242 28 f(2)', '243 23 f(-1)'], 'methodBody': '{switch(obj){casenull->f(0);caseLongl->f(1);caseIntegeri->f(1);caseint[]a->f(2);default->f(-1);}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f3', 'params': [{'paramType': 'Object', 'paramName': 'o'}], 'callMethods': ['251 16 f(0)'], 'methodBody': '{switch(o){casenull:caseLongl:f(0);break;default:break;}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f4', 'params': [], 'callMethods': [], 'methodBody': '{varvar=E1.var;switch(var){casevar:return;default:break;}switch(var){casevar->{}default->{}}}', 'methodvars': [{'varType': 'var', 'varDefinition': 'var'}]}, {'returnType': 'int', 'methodName': 'f5', 'params': [{'paramType': 'Number', 'paramName': 'n'}], 'callMethods': ['281 29 l.intValue()', '281 50 l.byteValue()', '281 72 l.byteValue()', '282 33 var.byteValue()', '283 32 i.byteValue()'], 'methodBody': '{returnswitch(n){caseLongl&&l.intValue()==1&&l.byteValue()==1->l.byteValue();caseLongvar->var.byteValue();caseIntegeri->i.byteValue();default->thrownewRuntimeException("");};}', 'methodvars': []}, {'returnType': 'Function<Integer,String>', 'methodName': 'f6', 'params': [{'paramType': 'Object', 'paramName': 'obj'}], 'callMethods': [], 'methodBody': '{booleanb=true;returnswitch(obj){caseStringvar&&b->t->var;default->t->"Default string";};}', 'methodvars': [{'varType': 'boolean', 'varDefinition': 'b'}]}, {'returnType': 'int', 'methodName': 'dummy', 'params': [], 'callMethods': [], 'methodBody': '{return0;}', 'methodvars': []}, {'returnType': 'Function<Integer,String>', 'methodName': 'f7', 'params': [{'paramType': 'Object', 'paramName': 'obj'}], 'callMethods': ['305 49 s.length()', '305 65 dummy()'], 'methodBody': '{booleanb=true;booleanb2=true;booleanb3=true;returnswitch(obj){case(((Strings)&&(b&&b2))&&s.length()>0&&dummy()==1)->t->s;case(((Integeri&&b&&b2)&&(b&&b2))&&b3&&(b&&b2))->t->"";case(((Integeri&&b&&b2)&&(b&&b2))&&b3&&(b&&b2&&!b3))->{yieldt->"";}casefinalLongl&&(b?b2:b3)->{yieldt->"";}default->t->"Default string";};}', 'methodvars': [{'varType': 'boolean', 'varDefinition': 'b'}, {'varType': 'boolean', 'varDefinition': 'b2'}, {'varType': 'boolean', 'varDefinition': 'b3'}]}, {'returnType': 'void', 'methodName': 'f8', 'params': [{'paramType': 'Object', 'paramName': 'o'}, {'paramType': 'int', 'paramName': 'i'}], 'callMethods': [], 'methodBody': '{switch(i){case1,2:case3,4:{}}switch(o){caseNumberb:{}default:{}}varf=switch(o){casefinalI2l:{yieldswitch(o){caseByteb->1;default->0;};}default:{yield1;}};}', 'methodvars': [{'varType': 'var', 'varDefinition': 'f'}]}, {'returnType': 'record', 'methodName': 'ER', 'params': [], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'record', 'methodName': 'CR', 'params': [], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn', 'params': [{'paramType': 'T', 'paramName': 't'}], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': ['432 10 p.fn(1L)'], 'methodBody': '{}', 'methodvars': [{'varType': 'Pt<Long,Long>', 'varDefinition': 'p'}]}, {'returnType': 'void', 'methodName': 'fn1', 'params': [], 'callMethods': ['432 10 p.fn(1L)'], 'methodBody': '{finalrecordPt<T,GextendsNumber>(intx,inty)implementsI1,R1.I{voidfn(Tt){}<TT>voidf(){}Pt(intx,inty){this.x=x;this.y=y;}privatefinalstaticintC=1;staticclassC{}}Pt<Long,Long>p=newPt<>(1,2);p.fn(1L);}', 'methodvars': [{'varType': 'Pt<Long,Long>', 'varDefinition': 'p'}]}, {'returnType': 'void', 'methodName': 'f', 'params': [{'paramType': 'String', 'paramName': 's'}], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'fn', 'params': [], 'callMethods': ['459 8 f("""\r\n                a""")', '462 8 f("""\r\n                """)'], 'methodBody': '{vars="""\r\n                a \\t\r\n                \\r""";vars2="""\r\n                a"""+"""\r\n                b""";vars3="""\r\n                """;f("""\r\n                a""");f("""\r\n                """);}', 'methodvars': [{'varType': 'var', 'varDefinition': 's'}, {'varType': 'var', 'varDefinition': 's2'}, {'varType': 'var', 'varDefinition': 's3'}]}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': [], 'methodBody': '{varnon=1;varsealed=2;varns=non-sealed;varpermits=1;varrecord=1;}', 'methodvars': [{'varType': 'var', 'varDefinition': 'non'}, {'varType': 'var', 'varDefinition': 'sealed'}, {'varType': 'var', 'varDefinition': 'ns'}, {'varType': 'var', 'varDefinition': 'permits'}, {'varType': 'var', 'varDefinition': 'record'}]}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': [], 'methodBody': '{opens<Byte>.provides<Long>b1=newopens<>().newprovides<>(){};opens<Byte>.provides<Long>b2=newopens().newprovides(){};}', 'methodvars': [{'varType': 'opens<Byte>.provides<Long>', 'varDefinition': 'b1'}, {'varType': 'opens<Byte>.provides<Long>', 'varDefinition': 'b2'}]}, {'returnType': 'void', 'methodName': 'g', 'params': [], 'callMethods': [], 'methodBody': '{Ee=E.provides;switch(e){caseprovides:break;}}', 'methodvars': [{'varType': 'E', 'varDefinition': 'e'}]}, {'returnType': 'Object', 'methodName': 'var', 'params': [], 'callMethods': [], 'methodBody': '{returnnull;}', 'methodvars': []}, {'returnType': 'provides<Long>', 'methodName': 'get', 'params': [], 'callMethods': [], 'methodBody': '{returnnull;}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'h', 'params': [], 'callMethods': ['556 28 get()'], 'methodBody': '{varo=get().<Long>var();SS.Sup<provides<Long>.with<Long>>s=@Issue1897.Dum1provides<Long>.with<Long>::new;}', 'methodvars': [{'varType': 'var', 'varDefinition': 'o'}, {'varType': 'SS.Sup<provides<Long>.with<Long>>', 'varDefinition': 's'}]}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'with', 'params': [{'paramType': 'String', 'paramName': 's'}], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'g', 'params': [], 'callMethods': [], 'methodBody': '{with.super.f();}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'with', 'params': [{'paramType': 'String', 'paramName': 's'}], 'callMethods': [], 'methodBody': '{try{}catch(Exceptionvar){}}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': [], 'methodBody': '{openso=newopens();BiFunction<Long,Long,Long>b=(opens,with)->1L;Consumer<String>c=opens.module::<Byte>with;}', 'methodvars': [{'varType': 'opens', 'varDefinition': 'o'}, {'varType': 'BiFunction<Long,Long,Long>', 'varDefinition': 'b'}, {'varType': 'Consumer<String>', 'varDefinition': 'c'}]}, {'returnType': 'int', 'methodName': 'f', 'params': [{'paramType': 'Object', 'paramName': 'o'}], 'callMethods': [], 'methodBody': '{finalvaryield=1;returnswitch(o){caseLongl->{yieldyield;}default->{yieldyield;}};}', 'methodvars': [{'varType': 'final', 'varDefinition': 'var'}, {'varType': 'yield', 'varDefinition': 'yield'}, {'varType': 'yield', 'varDefinition': 'yield'}]}, {'returnType': 'int', 'methodName': 'yield', 'params': [{'paramType': 'int', 'paramName': 'yield'}], 'callMethods': [], 'methodBody': '{returnyield;}', 'methodvars': []}]}
