{'packageName': 'var.var', 'className': 'TH', 'implements': ['I6'], 'extends': 'CI4', 'imports': ['java.lang.annotation', 'java.util.ArrayList', 'java.util.List', 'var.var.base.T'], 'fields': [{'fieldType': 'int', 'fieldDefinition': 'p'}, {'fieldType': 'int', 'fieldDefinition': 'sp'}, {'fieldType': 'int', 'fieldDefinition': 'var'}, {'fieldType': 'int', 'fieldDefinition': 'var'}, {'fieldType': 'int', 'fieldDefinition': 'var'}, {'fieldType': 'int', 'fieldDefinition': 'var'}], 'methods': [{'returnType': 'void', 'methodName': 'close', 'params': [], 'callMethods': [], 'methodBody': 'throws', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f', 'params': [], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f1', 'params': [], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'var', 'params': [], 'callMethods': [], 'methodBody': '{var:for(;;){breakvar;}}', 'methodvars': []}, {'returnType': 'int', 'methodName': 'var', 'params': [], 'callMethods': ['88 16 var()', '90 20 CCC.var()'], 'methodBody': '{return0;}', 'methodvars': [{'varType': 'final', 'varDefinition': 'var'}, {'varType': 'T', 'varDefinition': 't'}, {'varType': 'var', 'varDefinition': 'var'}, {'varType': 'var', 'varDefinition': 'b'}, {'varType': 'var', 'varDefinition': 'r'}, {'varType': 'var', 'varDefinition': 'v'}, {'varType': 'var', 'varDefinition': 'n'}, {'varType': 'CI4', 'varDefinition': 'ci4'}, {'varType': 'I4', 'varDefinition': 'i4a'}, {'varType': 'E1', 'varDefinition': 'e'}, {'varType': 'int', 'varDefinition': 'var,i'}, {'varType': 'var', 'varDefinition': 'var'}]}, {'returnType': 'int', 'methodName': 'var', 'params': [], 'callMethods': [], 'methodBody': '{return0;}', 'methodvars': [{'varType': 'final', 'varDefinition': 'var'}, {'varType': 'var', 'varDefinition': 'var'}, {'varType': 'var', 'varDefinition': 'module'}, {'varType': 'var', 'varDefinition': 'open'}, {'varType': 'var', 'varDefinition': 'requires'}, {'varType': 'var', 'varDefinition': 'exports'}, {'varType': 'var', 'varDefinition': 'opens'}, {'varType': 'var', 'varDefinition': 'to'}, {'varType': 'var', 'varDefinition': 'uses'}, {'varType': 'var', 'varDefinition': 'provides'}, {'varType': 'var', 'varDefinition': 'with'}, {'varType': 'var', 'varDefinition': 'transitive'}]}, {'returnType': 'void', 'methodName': 'foo', 'params': [], 'callMethods': [], 'methodBody': '{varf=1;}', 'methodvars': [{'varType': 'var', 'varDefinition': 'f'}]}, {'returnType': 'void', 'methodName': 'foo2', 'params': [], 'callMethods': [], 'methodBody': 'throws', 'methodvars': [{'varType': 'final', 'varDefinition': 'var'}, {'varType': 'final', 'varDefinition': 'var'}, {'varType': 'List<Integer>', 'varDefinition': 'lst'}]}, {'returnType': 'void', 'methodName': 'foo3', 'params': [], 'callMethods': [], 'methodBody': 'throws', 'methodvars': [{'varType': 'var', 'varDefinition': 'a'}]}, {'returnType': 'void', 'methodName': 'foo31', 'params': [], 'callMethods': [], 'methodBody': 'throws', 'methodvars': [{'varType': 'var', 'varDefinition': 'var'}, {'varType': 'var', 'varDefinition': 'a'}]}, {'returnType': 'void', 'methodName': 'foo4', 'params': [], 'callMethods': [], 'methodBody': '{I1i1a=(inti)->1;I1i1b=(varvar)->1;I1i1c=var->1;I2i2a=(finalintvar,intvar1)->1;I2i2b=(finalvarvar,varj)->1;}', 'methodvars': [{'varType': 'I1', 'varDefinition': 'i1a'}, {'varType': 'I1', 'varDefinition': 'i1b'}, {'varType': 'I1', 'varDefinition': 'i1c'}, {'varType': 'I2', 'varDefinition': 'i2a'}, {'varType': 'I2', 'varDefinition': 'i2b'}]}, {'returnType': 'int', 'methodName': 'var', 'params': [], 'callMethods': [], 'methodBody': '{return0;}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'vartest', 'params': [], 'callMethods': [], 'methodBody': '{I6.super.var();I6.super.<Byte,Long>var();}', 'methodvars': []}, {'returnType': 'int', 'methodName': 'var', 'params': [], 'callMethods': ['240 25 super.var()'], 'methodBody': '{returnsuper.var();}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'f', 'params': [{'paramType': 'int', 'paramName': 'var'}], 'callMethods': [], 'methodBody': '{}', 'methodvars': []}, {'returnType': 'void', 'methodName': 'var', 'params': [], 'callMethods': ['264 17 this.var()', '266 23 System.out.println(var)'], 'methodBody': '{}', 'methodvars': []}]}
